############################################################
#       Default Logging Configuration File
#
# You can use a different file by specifying a filename
# with the java.util.logging.config.file system property.  
# For example java -Djava.util.logging.config.file=C:\Dev\workspaces\ecl-projects\webdriver-opera\src\logger.properties
#-Djava.util.logging.config.file=/Users/dturkoglu/Development/eclipse/webdriver-opera/src/logger.properties
############################################################

############################################################
#       Global properties
############################################################

# "handlers" specifies a comma separated list of log Handler 
# classes.  These handlers will be installed during VM startup.
# Note that these classes must be on the system classpath.
# By default we only configure a ConsoleHandler, which will only
# show messages at the INFO and above levels.
handlers=java.util.logging.ConsoleHandler

# To also add the FileHandler, use the following line instead.
#handlers= java.util.logging.FileHandler, java.util.logging.ConsoleHandler

# Default global logging level.
# This specifies which kinds of events are logged across
# all loggers.  For any given facility this global level
# can be overriden by a facility specific level
# Note that the ConsoleHandler also has a separate level
# setting to limit messages printed to the console.
.level = WARNING

############################################################
# Handler specific properties.
# Describes specific configuration info for Handlers.
############################################################

# default file output is in user's home directory.
#java.util.logging.FileHandler.pattern = %h/%g-tmo-aft-log.xml
#java.util.logging.FileHandler.limit = 1000000
#java.util.logging.FileHandler.count = 10
#java.util.logging.FileHandler.formatter = java.util.logging.XMLFormatter
#java.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter
#java.util.logging.FileHandler.level = FINEST

# Limit the message that are printed on the console to INFO and above.
java.util.logging.ConsoleHandler.level = INFO
java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter

############################################################
# Facility specific properties.
# Provides extra control for each logger.
############################################################

# For example, set the com.xyz.foo logger to only log SEVERE
# messages:
#com.xyz.foo.level = SEVERE

#com.opera.core.systems.level = SEVERE
#com.opera.core.systems.scope.stp.level = SEVERE
#com.opera.core.systems.util.level = SEVERE
#com.opera.core.spartan.level= INFO

#com.opera.core.systems.level = FINEST
#com.opera.core.systems.scope.stp.level = FINEST
#com.opera.core.systems.util.level = FINEST
#com.opera.core.spartan.level= FINEST

com.opera.core.systems.runner.launcher.level = SEVERE
